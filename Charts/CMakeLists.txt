SET(KIT Charts)
SET(UKIT CHARTS)

SET(KIT_TCL_LIBS vtkHybridTCL vtkViewsTCL ${VTK_TK_LIBRARIES})
SET(KIT_PYTHON_LIBS vtkHybridPythonD vtkViewsPythonD)
SET(KIT_JAVA_LIBS vtkHybridJava vtkViewsJava)

IF (JAVA_AWT_LIBRARY)
  SET(KIT_JAVA_LIBS ${KIT_JAVA_LIBS} ${JAVA_AWT_LIBRARY})
ENDIF (JAVA_AWT_LIBRARY)

SET(KIT_INTERFACE_LIBRARIES vtkHybrid vtkViews)
SET(KIT_LIBS vtkIO vtkftgl
  ${VTK_FREETYPE_LIBRARIES}
)

SET(Kit_SRCS
  vtkAbstractContextBufferId.cxx
  vtkAbstractContextItem.cxx
  vtkAxis.cxx
  vtkBarMark.cxx
  vtkBlockItem.cxx
  vtkBrush.cxx
  vtkChart.cxx
  vtkChartLegend.cxx
  vtkChartParallelCoordinates.cxx
  vtkChartXY.cxx
  vtkChartPie.cxx
  vtkPlotPie.cxx
  vtkColorSeries.cxx
  vtkColorTransferFunctionItem.cxx
  vtkCompositeTransferFunctionItem.cxx
  vtkContext2D.cxx
  vtkContextActor.cxx
  vtkContextBufferId.cxx
  vtkContextClip.cxx
  vtkContextDevice2D.cxx
  vtkContextItem.cxx
  vtkContextMapper2D.cxx
  vtkContextScene.cxx
  vtkContextTransform.cxx
  vtkContextView.cxx
  vtkControlPointsItem.cxx
  vtkDataElement.cxx
  vtkDataValue.cxx
  vtkImageItem.cxx
  vtkLineMark.cxx
  vtkLookupTableItem.cxx
  vtkMark.cxx
  vtkMarkUtil.cxx
  vtkOpenGLContextBufferId.cxx
  vtkOpenGLContextDevice2D.cxx
  vtkPanelMark.cxx
  vtkPen.cxx
  vtkPiecewiseControlPointsItem.cxx
  vtkPiecewiseFunctionItem.cxx
  vtkPlot.cxx
  vtkPlotBar.cxx
  vtkPlotGrid.cxx
  vtkPlotLine.cxx
  vtkPlotStacked.cxx
  vtkPlotParallelCoordinates.cxx
  vtkPlotPoints.cxx
  vtkScalarsToColorsItem.cxx
  vtkTooltipItem.cxx
  vtkWedgeMark.cxx
  )

SET_SOURCE_FILES_PROPERTIES(
  vtkAbstractContextBufferId
  vtkAbstractContextItem
  vtkChart
  vtkContextDevice2D
  vtkContextItem
  vtkContextMapper2D
  vtkControlPointsItem
  vtkDataValue
  vtkPlot
  vtkScalarsToColorsItem
  ABSTRACT
  )

SET_SOURCE_FILES_PROPERTIES(
  vtkAbstractContextBufferId
  vtkContextBufferId
  vtkBarMark
  vtkChartColors
  vtkContext2D
  vtkDataElement
  vtkDataValue
  vtkLineMark
  vtkMark
  vtkMarkUtil
  vtkOpenGLContextBufferId
  vtkOpenGLContextDevice2D
  vtkPanelMark
  vtkValueHolder
  vtkWedgeMark
  WRAP_EXCLUDE
)

# Need to be able to include QApplication if Qt is used for runtime checks
IF(VTK_USE_QT)
  SET(QT_DONT_USE_QTGUI)
  INCLUDE(${QT_USE_FILE})
  IF (APPLE)
    LIST (APPEND KIT_INTERFACE_LIBRARIES ${QT_LIBRARIES})
  ELSE (APPLE)
    LIST (APPEND KIT_LIBS ${QT_LIBRARIES})
  ENDIF (APPLE)
ENDIF(VTK_USE_QT)

# Headers without a corresponding source file that should be installed.
# Seems like we should improve the kit macro to cover this at some point.
IF(NOT VTK_INSTALL_NO_DEVELOPMENT)
  SET(Kit_HDRS
    vtkColor.h
    vtkContextMouseEvent.h
    vtkVector.h
    )
  INSTALL(FILES ${Kit_HDRS}
    DESTINATION ${VTK_INSTALL_INCLUDE_DIR_CM24}
    COMPONENT Development)
ENDIF(NOT VTK_INSTALL_NO_DEVELOPMENT)

#-----------------------------------------------------------------------------
# Include CMake code common to all kits.
INCLUDE(${VTK_CMAKE_DIR}/KitCommonBlock.cmake)
#-----------------------------------------------------------------------------

#TARGET_LINK_LIBRARIES(vtkCharts ${QT_LIBRARIES})

